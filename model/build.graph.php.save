#!/usr/bin/php
<?php

$HOME=getenv('HOME');
define('CHROMIUM_ROOT',"$HOME/chromium/src");

#####

class Dep
{

	public $ref;
	public $type;
	public $hash;

	private static $deps = array();

	public static function Resolve($str){
		$arr = self::parse( $str );
		$hash = end( $arr );
		if ( !array_key_exists($hash,self::$deps) ){
			self::$deps[$hash] = new Dep( $arr );
		}
		return self::$deps[$hash];
	}

	private static function parse($str){
		$str = trim($str);
		if ( preg_match('/<.*>/',$str) ){
			$type="LIB";
		} else if ( preg_match( '/".*"/', $str ) ) {
			$type="PATH";
		} else {
			throw new Exception("Unresolved dep");
		}
		$ref = substr($str,1,strlen($str)-2);
		$type = $type;
		$hash = md5( $type . "::" . $ref );
		return array($ref,$type,$hash);
	}

	private function __construct( $arr ){
		list($this->ref,$this->type,$this->hash) = $arr;
	}

}

#####

class Graph {
	private $deps=array();
	private $refs=array();

	public $q = array();

	public function bind( $origin , $dep )
	{

	  if ( s )
					&& array_key_exists( $dep->hash , $this->refs ) )
			return;

		$this->deps[ $origin->hash ][ $dep->hash] = true;
		$this->refs[ $dep->hash ][ $origin->hash ] = true;

		echo "{$origin->ref} deps on {$dep->type}::{$dep->ref}\n";

		if ($dep->type != "LIB")
			array_push( $this->q , $dep);

	}
}

#####



function extractDeps( $graph ) {

	while ( count($graph->q ) > 0 )
	{

		$origin = array_shift( $graph->q );
		$filepath = CHROMIUM_ROOT  . "/" . $origin->ref;

		if ( ! ($fp = fopen($filepath,"r") ) )
		{
				file_put_contents("php://stderr", "Cannot open file $file");
        exit(-1);
		}

		while ( $line = fgets($fp) )
			if (preg_match('/#include ((.*)[\"\>])(.*)/',$line,$matches))
				$graph->bind( $origin , Dep::Resolve( $matches[1]  ) );

		fclose($fp);

	}

}



#####

chdir( getcwd() );

$g = new Graph();

$file = $argv[1];

$origin = Dep::Resolve( '"'
	. str_replace(CHROMIUM_ROOT."/",'',realpath( $file ))
	. '"');

$g->q[] = $origin;

extractDeps( $g );

echo "Done";

?>
